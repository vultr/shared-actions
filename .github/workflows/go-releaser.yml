name: "Automatic Releaser"

on:
  workflow_call:
    inputs:
      go_version:
        description: 'GoLang Version to use'
        required: true
        type: string
      vcr_endpoint:
        description: 'Endpoint for VCR'
        required: false
        type: string
    secrets:
      gh_token:
        required: true
        description: 'Github Token'
      docker_user:
        required: false
        description: 'Dockerhub Username'
      docker_pass:
        required: false
        description: 'Dockerhub Password'
      vcr_user:
        required: false
        description: 'VCR Username'
      vcr_pass:
        required: false
        description: 'VCR Password'
      s3_key:
        required: false
        description: 'S3 Access Key'
      s3_secret:
        required: false
        description: 'S3 Secret Key'

permissions:
  contents: write

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      msg_check: ${{ steps.check-msg.outputs.match }}
    steps:
      - name: Check Message
        id: check-msg
        run: |
          pattern="^Release v[0-9]+.[0-9]+.[0-9]+ #(minor|major|patch)$"
          if [[ "${{ github.event.head_commit.message }}" =~ ${pattern} ]]; then
              echo match=true >> $GITHUB_OUTPUT
          fi
  create-tag:
    runs-on: ubuntu-latest
    if: needs.check-commit.outputs.msg_check == 'true'
    needs: check-commit
    outputs:
      new_tag: ${{ steps.tagger.outputs.new_tag }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Bump version and push tag
      id: tagger
      uses: anothrNick/github-tag-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DEFAULT_BUMP: "none"

  goreleaser:
    runs-on: ubuntu-latest
    needs: create-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go_version }}

      - name: Docker Login
        if: secrets.docker_pass != ''
        run: |
          echo "${{ secrets.docker_pass }}" | docker login --username "${{ secrets.docker_user }}" --password-stdin

      - name: VCR Docker Login
        if: secrets.vcr_pass != ''
        run: |
          echo "${{ secrets.vcr_pass }}" | docker login ${{ inputs.vcr_endpoint }} --username "${{ secrets.vcr_user }}" --password-stdin

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.gh_token }}
          AWS_ACCESS_KEY_ID: ${{ secrets.s3_key || '' }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.s3_secret || '' }}

      - name: Clear
        if: always()
        run: |
          rm -f ${HOME}/.docker/config.json
  release:
    runs-on: ubuntu-latest
    needs: ["goreleaser", "create-tag"]
    name: Release Notification
    steps:
      - uses: mattermost/action-mattermost-notify@2.0.0
        with:
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          MATTERMOST_USERNAME: ${{ secrets.MATTERMOST_USERNAME}}
          MATTERMOST_ICON_URL: ${{ secrets.MATTERMOST_ICON }}
          TEXT: "${{ github.repository }} : Release https://github.com/${{ github.repository }}/releases/tag/${{ needs.create-tag.outputs.new_tag }}"